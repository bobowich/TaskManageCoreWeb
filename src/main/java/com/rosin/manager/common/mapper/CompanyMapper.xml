<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rosin.manager.common.dao.CompanyMapper">
  <resultMap id="BaseCompanyMap" type="com.rosin.manager.common.model.Company">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="company_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="company_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="company_leaderId" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    company_id, company_name, company_leaderId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseCompanyMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from company
    where company_id = #{companyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.util.List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete
    from
    company
    where
    company_id
    IN
    (
      <foreach collection="list" item="item" separator=",">
        #{item.companyId}
      </foreach>
    )
  </delete>
  <insert id="insert" parameterType="com.rosin.manager.common.model.Company">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into company (company_id, company_name, company_leaderId
      )
    values (#{companyId,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, #{companyLeaderid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rosin.manager.common.model.Company">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="companyLeaderid != null">
        company_leaderId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyLeaderid != null">
        #{companyLeaderid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rosin.manager.common.model.Company">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update company
    <set>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <!--<if test="companyLeaderid != null">-->
        <!--company_leaderId = #{companyLeaderid,jdbcType=INTEGER},-->
      <!--</if>-->
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rosin.manager.common.model.Company">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update company
    set company_name = #{companyName,jdbcType=VARCHAR},
      company_leaderId = #{companyLeaderid,jdbcType=INTEGER}
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
  <resultMap id="ClassicCompanyMap" type="com.rosin.manager.common.model.Company">
    <id column="company_id" property="companyId"/>
    <result column="company_name" property="companyName"/>
    <association column="company_leaderId" property="realName" javaType="java.lang.String">
      <!--<id column="user_id" property="userId"/>-->
      <!--<result column="user_name" property="userName"/>-->
      <result column="real_name" property="realName"/>
    </association>
  </resultMap>
  <select id="getAllCompanies" resultMap="ClassicCompanyMap">
    SELECT
    c.company_id,
    c.company_name,
    u.real_name

    FROM
    company c

    LEFT JOIN
    USER u

    ON
    c.company_leaderId=u.user_id

  </select>
</mapper>


